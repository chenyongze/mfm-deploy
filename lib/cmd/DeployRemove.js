// Generated by ToffeeScript 1.6.3-1
var DeployRemove, NameBaseDeploy, fs, path, util,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

fs = require('fs');

util = require('util');

NameBaseDeploy = require('./DeployBase').NameBaseDeploy;

path = require("path");

DeployRemove = (function(_super) {
  __extends(DeployRemove, _super);

  function DeployRemove(name, cmd, next) {
    DeployRemove.__super__.constructor.call(this, name, cmd, next);
  }

  DeployRemove.prototype.onFileExists_ = function() {
    var dirname;
    fs.unlinkSync(this.filename);
    this.commitChanges_("remove deploy [" + this.name + "]", this.next);
    dirname = path.dirname(this.filename);
    try {
      return fs.rmdirSync(dirname);
    } catch (_error) {
      return 111;
    }
  };

  return DeployRemove;

})(NameBaseDeploy);

module.exports = {};

module.exports.DeployRemove = DeployRemove;
