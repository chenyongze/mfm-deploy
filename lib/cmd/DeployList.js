// Generated by ToffeeScript 1.6.3-2
(function() {
  var DeployBase, DeployList, fs, util, walk,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  fs = require('fs');

  util = require('util');

  DeployBase = require('./DeployBase').DeployBase;

  walk = require('walk');

  function filter_files(opt, next) {
    var files, walker;
    files = [];
    walker = walk.walk(opt.folder, {
      followLinks: false
    });
    walker.on('file', function(root, stat, next) {
      if (opt.filter) {
        if (opt.filter(stat)) {
          if (opt.map && opt.map.call) {
            files.push(opt.map(stat.name));
          } else {
            files.push(stat.name);
          }
        }
      } else {
        if (opt.map && opt.map.call) {
          files.push(opt.map(stat.name));
        } else {
          files.push(stat.name);
        }
      }
      return next();
    });
    return walker.on('end', function() {
      return next(null, files);
    });
  };

  DeployList = (function(_super) {
    __extends(DeployList, _super);

    function DeployList(cmd, next) {
      DeployList.__super__.constructor.call(this, null, cmd, next);
    }

    DeployList.prototype.onDirExists_ = function() {
      var _this = this;
      return filter_files({
        folder: this.userDir,
        filter: function(stat) {
          return stat.name.split(".").pop() === "json";
        },
        map: function(name) {
          return name.split(".").shift();
        }
      }, function(err, list) {
        if (err) {
          next(err);
          return false;
        }
        if (!list.length) {
          console.log('还没有创建部署标识,可使用以下命令创建');
          console.log('...................................');
          console.log('   mfm ad <name>');
          console.log('...................................');
        } else {
          console.log(list.join(', '));
        }
        return _this.next(null);
      });
    };

    return DeployList;

  })(DeployBase);

  module.exports = {};

  module.exports.DeployList = DeployList;

}).call(this);
