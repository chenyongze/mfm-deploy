// Generated by ToffeeScript 1.6.3-2
var Cache, cache, t;

Cache = (function() {
  function Cache() {
    this.cache_ = {};
  }

  Cache.prototype.get = function(key) {
    return this.cache_[key];
  };

  Cache.prototype.set = function(key, val, delay) {
    var _this = this;
    this.cache_[key] = val;
    return setTimeout(function() {
      return delete _this.cache_[key];
    }, delay * 1000);
  };

  Cache.prototype.clear = function(key) {
    return delete this.cache_[key];
  };

  return Cache;

})();

module.exports = Cache;

if (require.main === module) {
  cache = new Cache;
  cache.set('c1', 'c1', 2);
  cache.set('c2', 'c2', 3);
  t = function(delay) {
    return setTimeout(function() {
      console.log("time:" + delay);
      console.log(cache.get('c1'));
      console.log(cache.get('c2'));
      return console.log('-------------------');
    }, delay);
  };
  t(1.2);
  t(2.5);
  t(3);
}
