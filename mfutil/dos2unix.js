// Generated by ToffeeScript 1.6.3-2
var assert, defaultIncludes, ffs, fs, fse, path,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

fs = require('fs');

path = require('path');

fse = require('fs-extra');

ffs = require('final-fs');

assert = require('assert-plus');

defaultIncludes = ['tpl', 'js', 'css', 'php', 'md', 'txt', 'sh', 'html', 'json', 'xml', 'htm'];

function filterExts(list, exts) {
  var ext, f, r, _i, _len;
  r = [];
  for (_i = 0, _len = list.length; _i < _len; _i++) {
    f = list[_i];
    ext = path.extname(f);
    ext = ext.substr(1);
    if (__indexOf.call(exts, ext) >= 0) {
      r.push(f);
    }
  }
  return r;
};

function toUnix(files, filer, next) {
  var c, cnt, err, file, _i, _len;
  files = filterExts(files, filer);
  for (_i = 0, _len = files.length; _i < _len; _i++) {
    file = files[_i];
    console.log(file);
    c = fs.readFileSync(file, {
      encoding: "utf-8"
    });
    cnt = c.replace(/\r\n/g, "\n");
    err = fs.writeFileSync(file, cnt, {
      encoding: "utf-8"
    });
    if (err) {
      next(err);
      break;
    }
  }
  return next(null, true);
};

function dos2unix(name, options, next) {
  var files, filter, o, p, stat,
    _this = this;
  assert.string(name, "name");
  assert.func(next, "next");
  if (options == null) {
    options = {};
  }
  filter = defaultIncludes;
  if (options.filter) {
    if (typeof options.filter === "string") {
      filter = options.filter.split(",");
    } else {
      filter = options.filter;
    }
  }
  p = path.resolve(name);
  if (fs.existsSync(p)) {
    stat = fs.statSync(p);
    files = [];
    if (stat.isFile()) {
      files.push(p);
      toUnix(files, filter, function(_$$_0) {
        return next(_$$_0);
      });
    } else if (stat.isDirectory()) {
      console.log(p);
      o = ffs.readdirRecursive(p, true, p);
      o.then(function(files) {
        toUnix(files, filter, function(_$$_1) {
          return next(_$$_1);
        });
      });
      return o.otherwise(function(err) {
        return next(err);
      });
    } else {
      return next("unknown type.");
    }
  } else {
    return next("no a dir or a file :" + name);
  }
};

module.exports = dos2unix;
